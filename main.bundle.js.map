{"version":3,"sources":["E:/Angular_4/message/frontends/src/$_lazy_route_resource lazy","E:/Angular_4/message/frontends/src/app/api.service.ts","E:/Angular_4/message/frontends/src/app/app.component.css","E:/Angular_4/message/frontends/src/app/app.component.ts","E:/Angular_4/message/frontends/src/app/app.module.ts","E:/Angular_4/message/frontends/src/app/auth.service.ts","E:/Angular_4/message/frontends/src/app/authInterceptor.service.ts","E:/Angular_4/message/frontends/src/app/login.component.ts","E:/Angular_4/message/frontends/src/app/messages.component.ts","E:/Angular_4/message/frontends/src/app/post.component.ts","E:/Angular_4/message/frontends/src/app/profile.component.ts","E:/Angular_4/message/frontends/src/app/register.component.html","E:/Angular_4/message/frontends/src/app/register.component.ts","E:/Angular_4/message/frontends/src/app/user.component.ts","E:/Angular_4/message/frontends/src/environments/environment.ts","E:/Angular_4/message/frontends/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Angular_4/message/frontends/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {HttpClient} from '@angular/common/http'\r\nimport {Injectable} from '@angular/core'\r\nimport {environment} from '../environments/environment'\r\n\r\n@Injectable()\r\n\r\nexport class ApiService{\r\n\r\n    messages=[];\r\n    users=[];\r\n    path=environment.path\r\n    constructor(private http: HttpClient){\r\n\r\n    }\r\n\r\n    getMessage(id){\r\n        this.http.get<any>(this.path+'post/'+id).subscribe(res=>{\r\n            this.messages=res;\r\n        })\r\n    }\r\n\r\n    postMessages(messages){\r\n        this.http.post(this.path+'post',messages).subscribe(res=>{\r\n           \r\n        })\r\n    }\r\n\r\n    getUsers(){\r\n        this.http.get<any>(this.path+'user').subscribe(res=>{\r\n            this.users=res;\r\n        })\r\n    }\r\n\r\n    getProfile(id){\r\n        return this.http.get(this.path+'profile/'+id)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/api.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Angular_4/message/frontends/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","import { Component } from '@angular/core';\nimport {AuthService} from './auth.service'\n\n@Component({\n  selector: 'app-root',\n  template:`\n      <mat-toolbar style=\"background:#3f51b5; color:white; position:fixed ; top:0;right:0;left:0;z-index:2;box-shadow:0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)\" >\n        <button mat-button routerLink=\"/\">mYapP</button>\n        <button mat-button routerLink=\"/users\">Users</button>\n        <span style=\"flex: 1 1 auto\"></span>\n        <span *ngIf=\"!authService.isAuthenticated()\">\n          <button mat-button routerLink=\"/login\">Login</button>\n          <button mat-button  routerLink=\"/register\">Register</button>\n        </span>\n        <button mat-button *ngIf=\"authService.isAuthenticated()\" (click)=\"authService.logout()\">Logout</button>\n      </mat-toolbar>\n      <br><br><br>\n      <router-outlet></router-outlet>\n  `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  constructor(private authService:AuthService){}\n   \n}\n\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {MatButtonModule,MatCardModule,MatToolbarModule,MatInputModule,MatListModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\nimport {FormsModule} from '@angular/forms'\nimport {HttpClientModule,HTTP_INTERCEPTORS} from '@angular/common/http'\n\n//components\nimport { AppComponent } from './app.component'\nimport {MessagesComponent} from './messages.component'\nimport {RegisterComponent} from './register.component'\nimport {LoginComponent} from './login.component'\nimport {UserComponent} from './user.component'\nimport {ProfileComponent} from './profile.component'\nimport {PostComponent} from './post.component'\n//services\nimport {ApiService} from './api.service'\nimport {AuthService} from './auth.service'\nimport {AuthInterceptorService} from './authInterceptor.service'\n\n\n//routes\n\nconst routes =[\n    {path:'',component:PostComponent},  \n    {path:'register',component:RegisterComponent},\n    {path:'login',component:LoginComponent},\n    {path:'users',component:UserComponent},\n    {path:'profile/:id', component:ProfileComponent}\n  ]\n\n@NgModule({\n  declarations: [\n    AppComponent,MessagesComponent,RegisterComponent,LoginComponent,UserComponent,ProfileComponent,PostComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatInputModule,\n    RouterModule.forRoot(routes),\n    BrowserAnimationsModule,\n    MatListModule,\n    HttpClientModule\n    \n  ],\n  providers: [\n    ApiService,\n    AuthService,\n    {provide:HTTP_INTERCEPTORS,\n    useClass:AuthInterceptorService,\n    multi:true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/app.module.ts","import {HttpClient} from '@angular/common/http'\r\nimport {Injectable} from '@angular/core'\r\nimport {environment} from '../environments/environment'\r\n@Injectable()\r\n\r\nexport class AuthService{\r\n    path=environment.path + 'auth/'\r\n    TOKEN_KEY='token'\r\n    constructor(private http: HttpClient){\r\n\r\n    }\r\n    getToken(){\r\n        return localStorage.getItem(this.TOKEN_KEY);\r\n    }\r\n\r\n    isAuthenticated(){\r\n        //return true or false if token exixt or not\r\n        return !!localStorage.getItem(this.TOKEN_KEY);\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem(this.TOKEN_KEY);\r\n    }\r\n    sendUserRegistration(registerUser){\r\n        this.http.post<any>(this.path+'register',registerUser).subscribe(res=>{\r\n            localStorage.setItem(this.TOKEN_KEY,res.token)            \r\n        })\r\n    }\r\n    sendUserLogin(loginUser){\r\n        this.http.post<any>(this.path+'login',loginUser).subscribe(res=>{\r\n            console.log(res);\r\n            localStorage.setItem(this.TOKEN_KEY,res.token);\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/auth.service.ts","import {HttpInterceptor} from '@angular/common/http'\r\nimport {Injectable, Injector} from '@angular/core'\r\nimport {AuthService} from './auth.service'\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n\r\n    constructor(private injector:Injector){}\r\n    intercept(req,next){\r\n        var auth=this.injector.get(AuthService)\r\n        var authRequest=req.clone({\r\n            headers:req.headers.set('Authorization' ,'token '+auth.getToken())\r\n        })\r\n        return next.handle(authRequest)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/authInterceptor.service.ts","import { Component } from '@angular/core';\r\n\r\n//services\r\nimport {AuthService} from './auth.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  template:`\r\n    <mat-card>\r\n        <mat-card-header>\r\n            <mat-card-title>\r\n                <h4>Login</h4>\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <form>\r\n                <mat-form-field>\r\n                    <input type=\"email\" name=email matInput placeholder=\"Email\" [(ngModel)]=\"loginData.email\">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input type=\"password\" name=password matInput placeholder=\"Password\" [(ngModel)]=\"loginData.password\">\r\n                </mat-form-field>\r\n                <button mat-raised-button color=primary (click)=\"login()\">Login</button>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n  `\r\n})\r\n\r\nexport class LoginComponent {\r\n    \r\n  loginData={\r\n\r\n  }\r\n  constructor(private authService:AuthService){} \r\n  login(){\r\n     this.authService.sendUserLogin(this.loginData);\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/login.component.ts","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router'\r\n\r\n\r\n//services\r\nimport {ApiService} from './api.service';\r\n\r\n@Component({\r\n  selector: 'messages',\r\n  template:`\r\n  <div *ngFor=\"let message of apiService.messages\">\r\n  <mat-card>{{message.message}}</mat-card>\r\n  </div>\r\n  `\r\n})\r\nexport class MessagesComponent {\r\n  title = 'app';\r\n  constructor(private apiService:ApiService,private route:ActivatedRoute){} \r\n\r\n  ngOnInit(){\r\n    var userId=this.route.snapshot.params.id;\r\n    this.apiService.getMessage(userId);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/messages.component.ts","import { Component } from '@angular/core';\r\n\r\n//services\r\nimport {ApiService} from './api.service';\r\n\r\n@Component({\r\n  selector: 'post',\r\n  template:`\r\n  <mat-card>\r\n  <mat-card-header>\r\n      <mat-card-title>\r\n          <h4>New Posts</h4>\r\n      </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n      <form>\r\n          <mat-form-field style=\"width:100%\">\r\n              <textarea type=\"text\" name=message matInput placeholder=\"Post Messages\" [(ngModel)]=\"postMessage.message\"></textarea>\r\n          </mat-form-field>\r\n          <br>\r\n          <button mat-raised-button color=primary (click)=\"post()\">Post</button>\r\n      </form>\r\n  </mat-card-content>\r\n</mat-card>\r\n  `\r\n})\r\nexport class PostComponent {\r\n  title = 'app';\r\n  postMessage={\r\n\r\n  }\r\n  constructor(private apiService:ApiService){} \r\n  post(){\r\n      this.apiService.postMessages(this.postMessage);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/post.component.ts","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router'\r\n\r\n//services\r\nimport {ApiService} from './api.service';\r\n\r\n@Component({\r\n  selector: 'profile',\r\n  template:`\r\n    <mat-card>\r\n        <mat-card-header>\r\n            <mat-card-title>\r\n                <h4>Profile</h4>\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <mat-list>\r\n                <mat-list-item>Name: {{profile?.name}}</mat-list-item>\r\n                <mat-list-item>Email: {{profile?.email}}</mat-list-item>\r\n                <mat-list-item>Description: {{profile?.description}}</mat-list-item>\r\n            </mat-list>\r\n      \r\n        </mat-card-content>\r\n    </mat-card>\r\n    <br>\r\n    <mat-card>\r\n        <mat-card-header>\r\n            <mat-card-title>\r\n                <h4>Messages</h4>\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <messages></messages>\r\n        </mat-card-content>\r\n    </mat-card>\r\n  \r\n  `\r\n})\r\n\r\nexport class ProfileComponent {\r\n    \r\n    profile;\r\n    constructor(private apiService:ApiService, private route:ActivatedRoute){} \r\n\r\n    ngOnInit(){\r\n        var id=this.route.snapshot.params.id;\r\n        this.apiService.getProfile(id).subscribe(data=>this.profile=data)\r\n    }\r\n \r\n}\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/profile.component.ts","module.exports = \"<mat-card>\\r\\n    <mat-card-header>\\r\\n        <mat-card-title>\\r\\n            <h4>Register New User</h4>\\r\\n        </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n        <form>\\r\\n            \\r\\n            <mat-form-field>\\r\\n                <input type=\\\"email\\\" name=email matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"registerData.email\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <input type=\\\"password\\\" name=password matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"registerData.password\\\">\\r\\n            </mat-form-field>\\r\\n            <br>\\r\\n            <mat-form-field>\\r\\n                    <input type=\\\"text\\\" name=name matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"registerData.name\\\">\\r\\n            </mat-form-field>\\r\\n            <br>\\r\\n            <mat-form-field style=\\\"width:100%\\\">\\r\\n                <textarea type=\\\"text\\\" name=description matInput placeholder=\\\"Description\\\" [(ngModel)]=\\\"registerData.description\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <br>\\r\\n            <button mat-raised-button color=primary (click)=\\\"register()\\\">Register</button>\\r\\n        </form>\\r\\n    </mat-card-content>\\r\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Angular_4/message/frontends/src/app/register.component.html\n// module id = ../../../../../src/app/register.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n//services\r\nimport {AuthService} from './auth.service';\r\n\r\n@Component({\r\n  selector: 'register',\r\n  templateUrl:'./register.component.html'\r\n})\r\n\r\nexport class RegisterComponent {\r\n    \r\n  registerData={\r\n\r\n  }\r\n  constructor(private authService:AuthService){} \r\n  register(){\r\n     console.log( this.registerData);\r\n     this.authService.sendUserRegistration(this.registerData);\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/register.component.ts","import { Component } from '@angular/core';\r\n\r\n//services\r\nimport {ApiService} from './api.service';\r\n\r\n@Component({\r\n  selector: 'user',\r\n  template:`\r\n  <div *ngFor=\"let user of apiService.users\">\r\n  <mat-card [routerLink]=\"['/profile', user._id]\" style=\"cursor:pointer\">{{user.name}}</mat-card>\r\n  </div>\r\n  `\r\n})\r\nexport class UserComponent {\r\n  title = 'app';\r\n  constructor(private apiService:ApiService){} \r\nngOnInit(){\r\n    this.apiService.getUsers();\r\n}\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/app/user.component.ts","export const environment = {\n  production: true,\n  path:'http://localhost:3000/'\n};\n\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// E:/Angular_4/message/frontends/src/main.ts"],"sourceRoot":"webpack:///"}